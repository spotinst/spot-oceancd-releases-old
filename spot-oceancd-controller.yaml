apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: spot-oceancd-cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: oceancd
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Service
metadata:
  name: spot-oceancd-controller-svc
  namespace: oceancd
  labels:
    app: spot-oceancd-controller
spec:
  selector:
    app: spot-oceancd-controller
  ports:
    -  name: web
       protocol: TCP
       port: 8000
       targetPort: 8000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: spot-oceancd-controller
  namespace: oceancd
  labels:
    app: spot-oceancd-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spot-oceancd-controller
  template:
    metadata:
      labels:
        app: spot-oceancd-controller
    spec:
      containers:
      - name: spot-oceancd-controller
        imagePullPolicy: Always
        image: spotinst/spot-oceancd-controller:0.1.0
        ports:
        - containerPort: 8000
        env:
           - name: TOKEN
             valueFrom:
               secretKeyRef:
                 name: spot-oceancd-controller-token
                 key: token
           - name: NODE_NAME
             valueFrom:
               fieldRef:
                 fieldPath: spec.nodeName
           - name: POD_NAME
             valueFrom:
               fieldRef:
                  fieldPath: metadata.name
        volumeMounts:
        - name: spot-oceancd-controller-tls
          mountPath: /tls
          readOnly: true
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
      volumes:
      - name: spot-oceancd-controller-tls
        secret:
          secretName: spot-oceancd-controller-tls
      imagePullSecrets:
        - name: aws-ecr-credentials
